<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--
         MyBatis核心配置文件中，标签的顺序：
         properties属性,settings设置,typeAliases类型别名,typeHandlers类型处理程序,
         objectFactory对象工厂,objectWrapperFactory对象包装器工厂,reflectorFactory反射器工厂,
         plugins插件,environments环境,databaseIdProvider数据库Id提供程序,mappers映射器
     -->


    <!--  引入properties文件，此后就可以在当前文件中使用${key}的方式访问value  -->
    <properties resource="jdbc.properties"/>

    <!--
        设置类型别名
             typeAliases:设置类型别名，即为某个具体的类型设置一个别名
             在Mybatis的范围中，就可以使用别名标识一个具体的类型。
    -->
    <typeAliases>
        <!--
        typeAlias：设置某个类型的别名
        属性：
            type：设置需要设置别名的类型
            alias：设置某个类型的别名
                    若不设置alias该属性，那么该类型拥有默认的别名，即类名(User)，且不区分大小写
        -->
<!--        <typeAlias type="com.atguigu.mybatis.pojo.User" alias="abc"></typeAlias>-->
        <typeAlias type="com.atguigu.mybatis.pojo.User" />
        <!--以包为单位，将包下所有的类型【设置默认的类型】【别名】，即类名且不区分大小写-->
        <package name="com.atguigu.mybatis.pojo"/>

    </typeAliases>


    <!--
            environments:配置连接数据库的环境
            属性：
                default：设置默认使用的环境的id
     -->
    <environments default="development">
        <!--
                environment:设置一个具体的连接数据库的环境数据
                属性：
                    id:设置环境的唯一标识，不能重复
            -->
        <environment id="development">

            <!--
                   transactionManager：设置事务管理方式
                    属性：
                        type="JDBC"或者"MANAGED"
                        JDBC：表示当前环境中，执行SQL时，使用的是JDBC中原生的事务管理方式，事
                        务的提交或回滚需要手动处理
                        MANAGED：被管理，例如Spring
                -->
            <transactionManager type="JDBC"/>
            <!--
                    dataSource：配置数据源
                        属性：
                        type：设置数据源的类型
                            type="POOLED"或者"UNPOOLED"、"JNDI"
                            POOLED：表示使用数据库连接池缓存数据库连接
                            UNPOOLED：表示不使用数据库连接池
                            JNDI：表示使用上下文中的数据源
                 -->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>

        <environment id="test">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="com.mysql.cj.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/ssm?serverTimezone=UTC"/>
                <property name="username" value="root"/>
                <property name="password" value="333"/>
            </dataSource>
        </environment>

    </environments>

    <!--  引入MyBatis的映射文件  -->
    <mappers>
<!--        <mapper resource="mappers/UserMapper.xml"/>-->
        <!--
        以包为单位引入映射文件
        要求：
            1、mapper接口【所在的包】要和映射文件【所在的包】一致
            2、mapper接口要和映射文件的名字一致
        -->
        <package name="com.atguigu.mybatis.mapper"/>
    </mappers>
</configuration>